local REPO_URL = "https://raw.github.com/Yevano/see/master/see/"
local SUPPORTS_COLOR = term.isColor()

local args = { ... }

local MAKE_PATHS = {
    "apis/",
    "bin/",
    "lib/",
    "lib/see/",
    "lib/see/base/",
    "lib/see/concurrent/",
    "lib/see/event/",
    "lib/see/event/impl/",
    "lib/see/io/",
    "lib/see/net/",
    "lib/see/rt/",
    "lib/see/util/",
    "lib/see/io/peripheral"
}

local DL_PATHS = {
    "lib/see/base/Array.lua",
    "lib/see/base/Exception.lua",
    "lib/see/base/Iterators.lua",
    "lib/see/base/Object.lua",
    "lib/see/base/String.lua",
    "lib/see/base/System.lua",
    "lib/see/concurrent/InterruptedException.lua",
    "lib/see/concurrent/Task.lua",
    "lib/see/concurrent/Thread.lua",
    "lib/see/event/Event.lua",
    "lib/see/event/Events.lua",
    "lib/see/event/impl/AlarmEvent.lua",
    "lib/see/event/impl/CharEvent.lua",
    "lib/see/event/impl/DiskEjectEvent.lua",
    "lib/see/event/impl/DiskInsertEvent.lua",
    "lib/see/event/impl/HTTPFailureEvent.lua",
    "lib/see/event/impl/HTTPSuccessEvent.lua",
    "lib/see/event/impl/KeyPressEvent.lua",
    "lib/see/event/impl/ModemMessageEvent.lua",
    "lib/see/event/impl/MonitorResizeEvent.lua",
    "lib/see/event/impl/MonitorTouchEvent.lua",
    "lib/see/event/impl/MouseDragEvent.lua",
    "lib/see/event/impl/MousePressEvent.lua",
    "lib/see/event/impl/MouseScrollEvent.lua",
    "lib/see/event/impl/PeripheralAttachEvent.lua",
    "lib/see/event/impl/PeripheralDetachEvent.lua",
    "lib/see/event/impl/RednetMessageEvent.lua",
    "lib/see/event/impl/RedstoneEvent.lua",
    "lib/see/event/impl/SignalEvent.lua",
    "lib/see/event/impl/TerminalResizeEvent.lua",
    "lib/see/event/impl/TerminateEvent.lua",
    "lib/see/event/impl/TimerEvent.lua",
    "lib/see/event/impl/TurtleInventoryEvent.lua",
    "lib/see/event/impl/PasteEvent.lua",
    "lib/see/event/impl/UnknownEvent.lua",
    "lib/see/io/ArrayInputStream.lua",
    "lib/see/io/ArrayOutputStream.lua",
    "lib/see/io/DataInputStream.lua",
    "lib/see/io/DataOutputStream.lua",
    "lib/see/io/FileInputStream.lua",
    "lib/see/io/FileOutputStream.lua",
    "lib/see/io/Files.lua",
    "lib/see/io/InputStream.lua",
    "lib/see/io/IOException.lua",
    "lib/see/io/ModemInputStream.lua",
    "lib/see/io/ModemOutputStream.lua",
    "lib/see/io/OutputStream.lua",
    "lib/see/io/Path.lua",
    "lib/see/io/peripheral/AbstractPeripheral.lua",
    "lib/see/io/peripheral/CommandBlock.lua",
    "lib/see/io/peripheral/Computer.lua",
    "lib/see/io/peripheral/Disk.lua",
    "lib/see/io/peripheral/Modem.lua",
    "lib/see/io/peripheral/Monitor.lua",
    "lib/see/io/peripheral/Printer.lua",
    "lib/see/io/Peripheral.lua",
    "lib/see/io/Rednet.lua",
    "lib/see/io/Redstone.lua",
    "lib/see/io/Terminal.lua",
    "lib/see/net/HTTP.lua",
    "lib/see/net/HTTPResponse.lua",
    "lib/see/net/URL.lua",
    "lib/see/rt/ArchiveClassLoader.lua",
    "lib/see/rt/CastException.lua",
    "lib/see/rt/Class.lua",
    "lib/see/rt/ClassLoader.lua",
    "lib/see/rt/DefaultClassLoader.lua",
    "lib/see/rt/FileClassLoader.lua",
    "lib/see/rt/HTTPClassLoader.lua",
    "lib/see/rt/IndexOutOfBoundsException.lua",
    "lib/see/rt/InvalidArgumentException.lua",
    "lib/see/rt/NoSuchElementException.lua",
    "lib/see/rt/RuntimeException.lua",
    "lib/see/rt/UnimplementedMethodException.lua",
    "lib/see/rt/UnsupportedOperationException.lua",
    "lib/see/util/ArgumentUtils.lua",
    "lib/see/util/BinaryComparator.lua",
    "lib/see/util/BinaryHeap.lua",
    "lib/see/util/Bit.lua",
    "lib/see/util/Color.lua",
    "lib/see/util/Comparator.lua",
    "lib/see/util/EmptyStackException.lua",
    "lib/see/util/FastArray.lua",
    "lib/see/util/LRUCache.lua",
    "lib/see/util/Matcher.lua",
    "lib/see/util/Math.lua",
    "lib/see/util/Stack.lua",
    "lib/see/util/Timer.lua",
    "lib/see/util/VarArgs.lua",
    "lib/see/util/Properties.lua",
    "bin/igen",
    "bin/installer",
    "bin/rgen",
    "bin/see",
    "bin/wgen",
    "apis/see"
}

local function fail(err)
    if SUPPORTS_COLOR then
        term.setTextColor(colors.red)
    end

    print(err)

    if SUPPORTS_COLOR then
        term.setTextColor(colors.white)
    end

    while true do
        write("Retry installation? (y/n): ")
        local response = read()
        if string.lower(response):gsub("%s", "") == "y" then
            print("")
            return true
        elseif string.lower(response):gsub("%s", "") == "n" then
            return false
        end
        print("Invalid input.")
    end
end

while true do
    while true do
        local downloaded = 0

        local installPath
        if #args == 1 then
            installPath = args[1]
        else
            write("Choose an install path: ")
            installPath = "/" .. shell.resolve(read())
        end

        local configHandle = fs.open("/.see", "w")
        configHandle.write('install_dir = "' .. installPath .. '"')
        configHandle.close()

        local suc, err = pcall(fs.makeDir, installPath)
        if not suc then
            if fail("Could not create installation directory.") then break end
            return
        end

        print("Setting up directory structure.")

        for i = 1, #MAKE_PATHS do
            fs.makeDir(fs.combine(installPath, MAKE_PATHS[i]))
        end

        print("Downloading SEE files from repository.")

        local url, httpFail
        for i = 1, #DL_PATHS do
            url = REPO_URL .. DL_PATHS[i]
            print("Downloading " .. DL_PATHS[i])
            local readHandle = http.get(url)
            if not readHandle or readHandle.getResponseCode() ~= 200 then
                httpFail = true
                break
            end

            local _, relativePathStart = url:find(REPO_URL, 1, true)
            local writePath = fs.combine(installPath, url:sub(relativePathStart + 1))

            local writeHandle = fs.open(writePath, "w")
            writeHandle.write(readHandle.readAll())

            readHandle.close()
            writeHandle.close()
        end

        if httpFail then
            if fail("File download failed for url " .. url .. ".") then
                break
            end
        else
            print("SEE was installed successfully.")
        end

        return
    end
end